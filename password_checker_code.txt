/*
Documentation
Name        : Vamsi T
Date        : 5/5/25
Description : Password-Based Door Lock System using 8051 Microcontroller
*/


#include <reg51.h>  // Include header file for 8051 microcontroller

// Define keypad rows
sbit r1 = P1^0;
sbit r2 = P1^1;
sbit r3 = P1^2;
sbit r4 = P1^3;

// Define keypad columns
sbit c1 = P1^4;
sbit c2 = P1^5;
sbit c3 = P1^6;

// LCD and peripheral connections
sbit rs = P3^0;      // Register select
sbit rw = P3^1;      // Read/Write
sbit en = P3^2;      // Enable
sbit motp = P3^3;    // Motor positive terminal
sbit motn = P3^4;    // Motor negative terminal
sbit buzzer = P3^5;  // Buzzer output

// Function declarations
void lcdcmd(unsigned char);                     // Send command to LCD
void lcddat(unsigned char);                     // Send data to LCD
void lcddis(unsigned char *, unsigned char);    // Display string on LCD
void delay(unsigned int);                       // Delay function
bit check();                                    // Password check function

// Global variables
unsigned char pwd[6], x = 0;  // To store entered password

void main()
{
    // Initialize LCD
    lcdcmd(0x38);  // 2 lines, 5x7 matrix
    lcdcmd(0x01);  // Clear screen
    lcdcmd(0x0C);  // Display ON, cursor OFF
    lcdcmd(0x80);  // Force cursor to beginning (1st line)

    lcddis("PASSWORD CHECKING", 17);
    lcdcmd(0xC0);  // Move to second line
    lcddis("SYSTEM", 7);
    delay(10000);
    lcdcmd(0x01);  // Clear LCD

    // Main loop to take password input
    while(1)
    {
        x = 0;
        lcdcmd(0x01);  // Clear screen
        lcdcmd(0x80);
        lcddis("ENTER PASSWORD", 14);
        lcdcmd(0xC0);

        // Read 6 characters from keypad
        while(x < 6)
        {
            // Check row 1
            r1 = 0;
            if(c1 == 0) { pwd[x] = '1'; delay(15000); lcddat('*'); x++; while(c1==0); }
            if(c2 == 0) { pwd[x] = '2'; delay(15000); lcddat('*'); x++; while(c2==0); }
            if(c3 == 0) { pwd[x] = '3'; delay(15000); lcddat('*'); x++; while(c3==0); }
            r1 = 1;

            // Check row 2
            r2 = 0;
            if(c1 == 0) { pwd[x] = '4'; delay(15000); lcddat('*'); x++; while(c1==0); }
            if(c2 == 0) { pwd[x] = '5'; delay(15000); lcddat('*'); x++; while(c2==0); }
            if(c3 == 0) { pwd[x] = '6'; delay(15000); lcddat('*'); x++; while(c3==0); }
            r2 = 1;

            // Check row 3
            r3 = 0;
            if(c1 == 0) { pwd[x] = '7'; delay(15000); lcddat('*'); x++; while(c1==0); }
            if(c2 == 0) { pwd[x] = '8'; delay(15000); lcddat('*'); x++; while(c2==0); }
            if(c3 == 0) { pwd[x] = '9'; delay(15000); lcddat('*'); x++; while(c3==0); }
            r3 = 1;

            // Check row 4
            r4 = 0;
            if(c1 == 0) { pwd[x] = '*'; delay(15000); lcddat('*'); x++; while(c1==0); }
            if(c2 == 0) { pwd[x] = '0'; delay(15000); lcddat('*'); x++; while(c2==0); }
            r4 = 1;
        }

        // Check if entered password is correct
        if(check()) {
            break;
        }
    }

    // If password is correct
    lcdcmd(0x01);
    lcddis("ACCESS GRANTED", 14);
    motp = 1;
    motn = 0;
    buzzer = 0;

    while(1);  // Stop further execution
}

// Function to check if entered password matches
bit check()
{
    if(pwd[0]=='6'&&pwd[1]=='3'&&pwd[2]=='0'&&pwd[3]=='1'&&pwd[4]=='9'&&pwd[5]=='9')
    {
        return 1;  // Correct password
    }
    else
    {
        // If wrong password
        motp = 0;
        motn = 0;
        lcdcmd(0x01);
        lcddis("PASSWORD WRONG", 14);
        buzzer = 1;
        delay(20000);
        buzzer = 0;
        lcdcmd(0x01);
        lcddis("TRY AGAIN", 10);
        delay(20000);
        return 0;
    }
}

// Send command to LCD
void lcdcmd(unsigned char val)
{
    P2 = val;
    rs = 0;
    rw = 0;
    en = 1;
    delay(7000);
    en = 0;
}

// Send data to LCD
void lcddat(unsigned char dat)
{
    P2 = dat;
    rs = 1;
    rw = 0;
    en = 1;
    delay(5000);
    en = 0;
}

// Display string on LCD
void lcddis(unsigned char *s, unsigned char r)
{
    unsigned char w;
    for(w = 0; w < r; w++)
    {
        lcddat(s[w]);
        delay(8000);
    }
}

// Delay function (software delay)
void delay(unsigned int k)
{
    unsigned int i;
    for(i = 0; i < k; i++);
}
